kafka-config:
  bootstrapServers: ${kafka-bootstarpServers}
#  schemaRegistryUrlKey: schema.registry.url
#  schemaRegistryUrl: http://localhost:8081
  topicName: ${topic-name}
#  topicNamesToCreate:
#    - OrdermanagementStream
  numOfPartitions: 3
  replicationFactor: 3
kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
  value-serializer-class: com.oracle.microservices.common.streaming.model.KafkaPayload
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5
  sasl-mechanism: ${SASL_MECHANISM}
  security-protocol: ${SECURITY_PROTOCOL}
  oci-kafka-stream-details:
    tenancy-name: ${kafka-tenancyName}
    user-name: ${kafka-userName}
    stream-pool-id: ${kafka-streamPoolId}
    auth-token: ${kafka-authToken}
kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
  value-deserializer: com.oracle.microservices.common.streaming.model.KafkaDeserializer
  consumer-group-id: orders
  auto-offset-reset: earliest
  batch-listener: true
  auto-startup: true
  concurrency-level: 1
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150
  orders-topic: OrdermanagementStream
  sasl-mechanism: ${SASL_MECHANISM}
  security-protocol: ${SECURITY_PROTOCOL}
  oci-kafka-stream-details:
    tenancy-name: ${kafka-tenancyName}
    user-name: ${kafka-userName}
    stream-pool-id: ${kafka-streamPoolId}
    auth-token: ${kafka-authToken}